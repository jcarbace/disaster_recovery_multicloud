trigger: none

parameters:
  - name: destroy
    type: boolean
    default: false

pool:
  vmImage: ubuntu-latest

variables:
  - name: terraformVersion
    value: 1.2.5
  - name: secure_file
    value: 'service_account.json'
  - group: Azure

steps:

- task: DownloadSecureFile@1
  inputs:
    secureFile: ${{ variables.secure_file }}

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: "Install Terraform $(terraformVersion)"
  inputs:
    terraformVersion: $(terraformVersion)

- powershell: |
    terraform --version
    Copy-Item $(Agent.TempDirectory)/${{ variables.secure_file }} service_account.json
    terraform init -upgrade
  displayName: "TF Init"
  workingDirectory: "Azure"
  env:
    ARM_CLIENT_ID: $(ClientId)
    ARM_CLIENT_SECRET: $(Secret)
    ARM_SUBSCRIPTION_ID: $(Subscription)
    ARM_TENANT_ID: $(TenantId)
- powershell: |
    if ("${{parameters.destroy}}" -eq "True") {
      Copy-Item $(Agent.TempDirectory)/${{ variables.secure_file }} service_account.json
      terraform plan -destroy -out="./outazure.plan" -var-file="env.tfvars"
    } else {
      Copy-Item $(Agent.TempDirectory)/${{ variables.secure_file }} service_account.json
      terraform plan -out="./outazure.plan" -var-file="env.tfvars"
    }
  displayName: "TF Plan"
  workingDirectory: "Azure"
  env:
    ARM_CLIENT_ID: $(ClientId)
    ARM_CLIENT_SECRET: $(Secret)
    ARM_SUBSCRIPTION_ID: $(Subscription)
    ARM_TENANT_ID: $(TenantId)
- powershell: |
    Copy-Item $(Agent.TempDirectory)/${{ variables.secure_file }} service_account.json
    terraform apply -input=false -auto-approve outazure.plan
  displayName: "TF Apply"
  workingDirectory: "Azure"
  env:
    ARM_CLIENT_ID: $(ClientId)
    ARM_CLIENT_SECRET: $(Secret)
    ARM_SUBSCRIPTION_ID: $(Subscription)
    ARM_TENANT_ID: $(TenantId)